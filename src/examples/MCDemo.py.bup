#This example is used to test MCDisplay and all its children.
#Maybe make this a child of RPiPicoDisplay?

#This class turned out to be more complicated than I hoped for.
#Can I simplify it?


import tkinter as tk
import sys  
sys.path.append('../widgets') 
import MCDisplay as mcd  
import RPiPicoDisplay as rpp
import SymbolDisplay as sd

class MCDemo(tk.Tk):
    def __init__(self):
        super().__init__()
        self.button_quit=tk.Button(self, text="Quit", \
                                   command=self.destroy) 
        self.button2=tk.Button(self, text="Toggle",\
                               command=self.go_button)
        self.pico1=rpp.RPiPicoDisplay(self)
        self.pico1.pack()
        self.button2.pack()
        self.button_quit.pack()

        #Let's add an LED at pin 6
        self.pico1.set_led(6)

        #Let's add a button at pin 26
        self.button3=self.pico1.set_button(26)
        self.button3.bind('<ButtonPress>',self.go_button2)
        
##        #Set up a button at location 2
##        button_loc=26

##        #We want the button to be 19x19 pixels. So, pixel is a
##        #PhotoImage of size 1x1 pixels. We'll resize it to 19x19 for the button
##        pixel=tk.PhotoImage(width=1, height=1)
##
##        #TODO: Maybe write a getter for left_bar_frame and right_bar_frame?
##        
##        #If the button is on the left, loop through all 20 objects in left_bar
##        if button_loc<=20:
##            for ii in range(1,20):
##                temploc=self.pico1.get_pin_loc(ii)
##                #Alt syntax is shown below
##                #temploc=self.pico1._RPiPicoDisplay__left_bar[ii]
##                #Unpack them
##                temploc.pack_forget()
##                #Insert the button in the correct location
##                if(ii==button_loc-1):
##                    temploc=tk.Button(\
##                        self.pico1._RPiPicoDisplay__left_bar_frame, \
##                        image=pixel, height=19, width=19, command=self.go_button)
##                temploc.pack_forget()
##                #Repack them.
##                temploc.pack()
##        #Otherwise, loop through objects in right_bar and do the same thing.
##        else:
##            for ii in range(21,40):
##                temploc=self.pico1.get_pin_loc(ii)
##                temploc.pack_forget()
##                if(ii==60-button_loc):
##                    temploc=tk.Button(\
##                        self.pico1._RPiPicoDisplay__right_bar_frame, \
##                        image=pixel, height=19, width=19, command=self.go_button)
##                temploc.pack_forget()
##                temploc.pack()
        
        tk.mainloop()

    def go_button(self):
        if(self.pico1.get_led_color(6)=="yellow"):
            self.pico1.set_led_color(6, "blue")
        else:
            self.pico1.set_led_color(6, "yellow")

    #No idea why I need the second input here, but I do...
    def go_button2(self, x):
        if(self.pico1.get_led_color(6)=="yellow"):
            self.pico1.set_led_color(6, "blue")
        else:
            self.pico1.set_led_color(6, "yellow")
        
        
if __name__=="__main__":
    mygui=MCDemo()
